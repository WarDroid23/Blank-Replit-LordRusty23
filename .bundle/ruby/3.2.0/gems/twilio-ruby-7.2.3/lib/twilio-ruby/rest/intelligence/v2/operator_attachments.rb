##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#     |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#     |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Intelligence
#    This is the public Twilio REST API.
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#


module Twilio
    module REST
        class Intelligence < IntelligenceBase
            class V2 < Version
                class OperatorAttachmentsList < ListResource
                
                    ##
                    # Initialize the OperatorAttachmentsList
                    # @param [Version] version Version that contains the resource
                    # @return [OperatorAttachmentsList] OperatorAttachmentsList
                    def initialize(version)
                        super(version)
                        # Path Solution
                        @solution = {  }
                        
                        
                    end
                


                    # Provide a user friendly representation
                    def to_s
                        '#<Twilio.Intelligence.V2.OperatorAttachmentsList>'
                    end
                end


                class OperatorAttachmentsContext < InstanceContext
                    ##
                    # Initialize the OperatorAttachmentsContext
                    # @param [Version] version Version that contains the resource
                    # @param [String] service_sid The unique SID identifier of the Service.
                    # @return [OperatorAttachmentsContext] OperatorAttachmentsContext
                    def initialize(version, service_sid)
                        super(version)

                        # Path Solution
                        @solution = { service_sid: service_sid,  }
                        @uri = "/Services/#{@solution[:service_sid]}/Operators"

                        
                    end
                    ##
                    # Fetch the OperatorAttachmentsInstance
                    # @return [OperatorAttachmentsInstance] Fetched OperatorAttachmentsInstance
                    def fetch

                        headers = Twilio::Values.of({'Content-Type' => 'application/x-www-form-urlencoded', })
                        
                        payload = @version.fetch('GET', @uri, headers: headers)
                        OperatorAttachmentsInstance.new(
                            @version,
                            payload,
                            service_sid: @solution[:service_sid],
                        )
                    end


                    ##
                    # Provide a user friendly representation
                    def to_s
                        context = @solution.map{|k, v| "#{k}: #{v}"}.join(',')
                        "#<Twilio.Intelligence.V2.OperatorAttachmentsContext #{context}>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        context = @solution.map{|k, v| "#{k}: #{v}"}.join(',')
                        "#<Twilio.Intelligence.V2.OperatorAttachmentsContext #{context}>"
                    end
                end

                class OperatorAttachmentsPage < Page
                    ##
                    # Initialize the OperatorAttachmentsPage
                    # @param [Version] version Version that contains the resource
                    # @param [Response] response Response from the API
                    # @param [Hash] solution Path solution for the resource
                    # @return [OperatorAttachmentsPage] OperatorAttachmentsPage
                    def initialize(version, response, solution)
                        super(version, response)

                        # Path Solution
                        @solution = solution
                    end

                    ##
                    # Build an instance of OperatorAttachmentsInstance
                    # @param [Hash] payload Payload response from the API
                    # @return [OperatorAttachmentsInstance] OperatorAttachmentsInstance
                    def get_instance(payload)
                        OperatorAttachmentsInstance.new(@version, payload)
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        '<Twilio.Intelligence.V2.OperatorAttachmentsPage>'
                    end
                end
                class OperatorAttachmentsInstance < InstanceResource
                    ##
                    # Initialize the OperatorAttachmentsInstance
                    # @param [Version] version Version that contains the resource
                    # @param [Hash] payload payload that contains response from Twilio
                    # @param [String] account_sid The SID of the
                    #   {Account}[https://www.twilio.com/docs/iam/api/account] that created this OperatorAttachments
                    #   resource.
                    # @param [String] sid The SID of the Call resource to fetch.
                    # @return [OperatorAttachmentsInstance] OperatorAttachmentsInstance
                    def initialize(version, payload , service_sid: nil)
                        super(version)
                        
                        # Marshaled Properties
                        @properties = { 
                            'service_sid' => payload['service_sid'],
                            'operator_sids' => payload['operator_sids'],
                            'url' => payload['url'],
                        }

                        # Context
                        @instance_context = nil
                        @params = { 'service_sid' => service_sid  || @properties['service_sid']  , }
                    end

                    ##
                    # Generate an instance context for the instance, the context is capable of
                    # performing various actions.  All instance actions are proxied to the context
                    # @return [OperatorAttachmentsContext] CallContext for this CallInstance
                    def context
                        unless @instance_context
                            @instance_context = OperatorAttachmentsContext.new(@version , @params['service_sid'])
                        end
                        @instance_context
                    end
                    
                    ##
                    # @return [String] The unique SID identifier of the Service.
                    def service_sid
                        @properties['service_sid']
                    end
                    
                    ##
                    # @return [Array<String>] List of Operator SIDs attached to the service. Includes both Custom and Pre-built Operators.
                    def operator_sids
                        @properties['operator_sids']
                    end
                    
                    ##
                    # @return [String] The URL of this resource.
                    def url
                        @properties['url']
                    end
                    
                    ##
                    # Fetch the OperatorAttachmentsInstance
                    # @return [OperatorAttachmentsInstance] Fetched OperatorAttachmentsInstance
                    def fetch

                        context.fetch
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
                        "<Twilio.Intelligence.V2.OperatorAttachmentsInstance #{values}>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
                        "<Twilio.Intelligence.V2.OperatorAttachmentsInstance #{values}>"
                    end
                end

            end
        end
    end
end
